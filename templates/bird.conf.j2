# {{ ansible_managed }}

router id {{ bird_bgp_router_id }};

# We are only going to export routes from Calico interfaces.
# Currently, 'tap*' is used by the OpenStack implimentation
# and 'cali*' is used by the docker implimentation.
# dummy1 is the interface that bare metal "service" addresses
# should be bound to if they should be exported.
# This will need to be updated as we add new interface names.
#
# Also filter out default, just in case.
#
# We should automate the build of this out of variables when
# we have time.

filter export_bgp {
  if ( {% for i in bird_advertise_interfaces %}(ifname ~ "{{ i }}"){% if not loop.last %} || {% endif %}{% endfor %} ) then {
    if  net != 0.0.0.0/0 then accept;
  }
  reject;
}

# Configure synchronization between BIRD's routing tables and the
# kernel.
protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  import all;
  export all;     # Default is export none
}

# Watch interface up/down events.
protocol device {
  scan time 2;    # Scan interfaces every 2 seconds
}

protocol direct {
   debug all;
   interface "-dummy0", "dummy1", "eth*", "em*", "en*";
}

# Peer with route reflector.
protocol bgp UPLINK {
  description "Connection to BGP route reflector";
  local as {{ bird_bgp_asn }};
  {% for peer in bird_bgp_ipv4_peers -%}
    neighbor {{ peer }} as {{ bird_bgp_asn }};
  {% endfor -%}
  multihop;
  import none;
  export filter export_bgp;
  next hop self;    # Disable next hop processing and always advertise our
                    # local address as nexthop
  source address {{ bird_bgp_ipv4_source | default(ansible_default_ipv4['address']) }};  # The local address we use for the TCP connection
}
