bird_gpg_keys:
  - key_name: 'bird'
    keyserver: 'hkp://keyserver.ubuntu.com:80'
    fallback_keyserver: 'hkp://p80.pool.sks-keyservers.net:80'
    hash_id: '0xf2331238f9c59a45'

bird_apt_repo_url: "http://ppa.launchpad.net/cz.nic-labs/bird/ubuntu"
bird_apt_repo:
  repo: "deb {{ bird_apt_repo_url }} {{ ansible_distribution_release }} main"
  state: "present"

bird_apt_packages:
  - bird

bird_bgp_asn: 65535
bird_bgp_router_id: "{{ ansible_default_ipv4['address'] }}"

#configure bird to advertise subnets bound to these interface wildcards
bird_advertise_interfaces:
  - 'tap*'
  - 'cali*'
  - 'dummy1'

#the default ipv4 session we configure is toward the default gateway
bird_bgp_ipv4_peers:
  - ip: "{{ ansible_default_ipv4['gateway'] }}"
    import_filter: import_bgp
    export_filter: export_bgp

bird_kernel_ipv4_export_filter: 'export_kernel'

#the default ipv6 session we configure is toward the ipv6 subnet gateway routable address
bird_bgp_ipv6_peers:
  - ip: "{{ ((ansible_default_ipv6['address'] ~ '/' ~ ansible_default_ipv6['prefix']) | ipaddr('network') ~ '/' ~ ansible_default_ipv6['prefix']) | ipaddr('net') | ipaddr(1) | ipaddr('address') }}"
    export_filter: export_bgp

bird_ipv4_filters:
  export_bgp: |
    if ( {% for i in bird_advertise_interfaces %}(ifname ~ "{{ i }}"){% if not loop.last %} || {% endif %}{% endfor %} ) then {
      if  net != 0.0.0.0/0 then accept;
    }
    reject;
  import_bgp: |
    accept;
  export_kernel: |
    krt_prefsrc = {{ ansible_dummy1.ipv4.address }};
    accept;

bird_ipv6_filters:
  export_bgp: |
    if ( {% for i in bird_advertise_interfaces %}(ifname ~ "{{ i }}"){% if not loop.last %} || {% endif %}{% endfor %} ) then {
      if  net != ::/0 then accept;
    }
    reject;
